# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.
AC_INIT([libfes], [2.7.2], [aviso@oceanobs.com])

CONFIG_ABORT=yes

AC_ARG_VAR(AR, [AR archive command])

AC_CONFIG_AUX_DIR(config)
AC_CONFIG_MACRO_DIR([m4])
AC_CANONICAL_TARGET

AC_CONFIG_HEADERS([src/config.h])
AM_INIT_AUTOMAKE([-Wall -Werror foreign])
AM_PROG_AR
LT_INIT

#
# Checks for programs.
#
AC_PROG_CC
AC_PROG_INSTALL
AC_CHECK_PROGS(AR, ar, [ar])

AC_SUBST(AR_FLAGS, [cr])

#
# Checks for library functions.
#
AC_FUNC_MMAP

#
# Checks for header files
#
AC_CHECK_HEADER(stdarg.h)

#
# Check for netcdf header/library
#
AC_ARG_VAR(NETCDF_INC, Location of netCDF headers)
AC_ARG_VAR(NETCDF_LIB, Location of netCDF library)

if test "${NETCDF_LIB}"; then
    if test -d "${NETCDF_LIB}"; then
        LDFLAGS="${LDFLAGS} -L${NETCDF_LIB}"
    else
        echo "WARNING: NETCDF_LIB location \"${NETCDF_LIB}\" does not exist!"
    fi
else
    if test -d "/usr/local/lib"; then
        LDFLAGS="-L/usr/local/lib ${LDFLAGS}"
    fi
fi
if test "${NETCDF_INC}"; then
    if test -d "${NETCDF_INC}"; then
        CPPFLAGS="${CPPFLAGS} -I${NETCDF_INC}"
    else
        echo "WARNING: NETCDF_INC location \"${NETCDF_INC}\" does not exist!"
    fi
else
    if test -d "/usr/local/include"; then
        CPPFLAGS="-I/usr/local/include ${CPPFLAGS}"
    fi
fi

AC_CHECK_HEADER(
    [netcdf.h],
    [],
    [AC_MSG_ERROR([Can't find C header file for netcdf.])]
)
AC_CHECK_LIB(
    [netcdf],
    [nc_open],
    [],
    [AC_MSG_ERROR([Can't find netcdf library, or can't link a program to it.])]
)

#
# Check for uthash
#
AC_ARG_VAR(UTHASH_INC, Location of uthash headers)
if test "${UTHASH_INC}"; then
    if test -d "${UTHASH_INC}"; then
        CPPFLAGS="${CPPFLAGS} -I${UTHASH_INC}"
    else
        echo "WARNING: UTHASH_INC location \"${UTHASH_INC}\" does not exist!"
    fi
else
    if test -d "/usr/local/include"; then
        CPPFLAGS="-I/usr/local/include ${CPPFLAGS}"
    fi
fi

AC_CHECK_HEADER(
    [uthash.h],
    [],
    [AC_MSG_ERROR([Can't find C header file for uthash.])]
)

#
# Check for strlcpy/strlcat
#
AC_CHECK_HEADERS(
    [bsd/string.h],
    [
        AC_DEFINE(
            [HAVE_BSD_STRING],
            [1],
            [Check for BSD string])
    ]
)
AC_CHECK_FUNCS(
    [strlcat strlcpy],
    [STRL_FOUND="yes"],
    [
        AC_SEARCH_LIBS(
            [strlcat],
            [bsd strl],
            [LIBSTRL_FOUND="yes"],
            [STRL_FOUND="no"])
        AC_SEARCH_LIBS(
            [strlcpy],
            [bsd strl],
            [LIBSTRL_FOUND="yes"],
            [STRL_FOUND="no"])
    ]
)
# strlcat/strlcpy are provided by libbsd
if test x"$LIBSTRL_FOUND" = x"yes"
then
    LIBS="$LIBS $STRL_LIBS"
fi

# Impossible to build the library without these functions
if test x"$STRL_FOUND" != x"yes" -a x"$LIBSTRL_FOUND" != x"yes"
then
    AC_MSG_ERROR(no strlcpy/strlcat found)
fi

AC_SUBST([NETCDFLIB])
AC_CONFIG_FILES([Makefile src/Makefile test/Makefile examples/Makefile])

# Enable the documentation generation if doxygen is available
AC_CHECK_PROGS([DOXYGEN], [doxygen], [])
AM_CONDITIONAL([HAVE_DOXYGEN], [test -n "$DOXYGEN"])
AM_COND_IF([HAVE_DOXYGEN],
           [AC_CONFIG_FILES([doc/Doxyfile doc/Makefile])])

AC_OUTPUT

# Echo build parameters for debugging
echo "Configuration Parameters:"
echo "CC        = ${CC}"
echo "CFLAGS    = ${CFLAGS}"
echo "CPP       = ${CPP}"
echo "CPPFLAGS  = ${CPPFLAGS}"
echo "LDFLAGS   = ${LDFLAGS}"
echo "LIBS      = ${LIBS}"
